// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Promotigo.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(PromotigoContext))]
    [Migration("20230409175223_DummyDataV1")]
    partial class DummyDataV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Promotigo.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("449e957d-15c8-40c8-9f68-bcc4288a7bcc"),
                            DateCreated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(223),
                            DateUpdated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(274),
                            Name = "Brooks"
                        },
                        new
                        {
                            Id = new Guid("1f888604-02ae-4f98-ba63-3dfc2d729bde"),
                            DateCreated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(287),
                            DateUpdated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(289),
                            Name = "Coca Cola"
                        },
                        new
                        {
                            Id = new Guid("524d9afa-3a6e-4640-aaf5-71febc4347cf"),
                            DateCreated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(291),
                            DateUpdated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(293),
                            Name = "Ben & Jerrys"
                        });
                });

            modelBuilder.Entity("Promotigo.Models.Competition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("WinnersDrawn")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Competitions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("62538378-de06-4da0-b361-8f27f5430386"),
                            ClientId = new Guid("449e957d-15c8-40c8-9f68-bcc4288a7bcc"),
                            ClosingDate = new DateTime(2023, 4, 9, 18, 53, 22, 932, DateTimeKind.Local).AddTicks(299),
                            DateCreated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(304),
                            DateUpdated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(306),
                            OpeningDate = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(297),
                            Title = "Product launch instant win",
                            WinnersDrawn = false
                        },
                        new
                        {
                            Id = new Guid("d63d6620-ecc4-49f8-9f37-e2e2bddf494d"),
                            ClientId = new Guid("1f888604-02ae-4f98-ba63-3dfc2d729bde"),
                            ClosingDate = new DateTime(2023, 4, 9, 18, 53, 22, 932, DateTimeKind.Local).AddTicks(310),
                            DateCreated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(311),
                            DateUpdated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(313),
                            OpeningDate = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(308),
                            Title = "Sampling with capital xtra",
                            WinnersDrawn = false
                        },
                        new
                        {
                            Id = new Guid("f2413a3b-1058-45ff-bd46-07df8bbbbebb"),
                            ClientId = new Guid("524d9afa-3a6e-4640-aaf5-71febc4347cf"),
                            ClosingDate = new DateTime(2023, 4, 9, 18, 53, 22, 932, DateTimeKind.Local).AddTicks(317),
                            DateCreated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(318),
                            DateUpdated = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(319),
                            OpeningDate = new DateTime(2023, 4, 9, 18, 52, 22, 932, DateTimeKind.Local).AddTicks(315),
                            Title = "Share the love",
                            WinnersDrawn = false
                        });
                });

            modelBuilder.Entity("Promotigo.Models.CompetitionEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompetitionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CompetitionEntries");
                });

            modelBuilder.Entity("Promotigo.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
